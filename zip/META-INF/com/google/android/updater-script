# Hardware check
assert(getprop("ro.product.device") == "jflte" || getprop("ro.build.product") == "jflte" || getprop("ro.product.device") == "jfltexx" || getprop("ro.build.product") == "jfltexx" || getprop("ro.product.device") == "i9505" || getprop("ro.build.product") == "i9505" || getprop("ro.product.device") == "GT-I9505" || getprop("ro.build.product") == "GT-I9505" || getprop("ro.product.device") == "jgedlte" || getprop("ro.build.product") == "jgedlte" || getprop("ro.product.device") == "i9505g" || getprop("ro.build.product") == "i9505g" || getprop("ro.product.device") == "GT-I9505G" || getprop("ro.build.product") == "GT-I9505G" || getprop("ro.product.device") == "jfltevzw" || getprop("ro.build.product") == "jfltevzw" || getprop("ro.product.device") == "jfltespr" || getprop("ro.build.product") == "jfltespr" || getprop("ro.product.device") == "jflterefreshspr" || getprop("ro.build.product") == "jflterefreshspr" || getprop("ro.product.device") == "jfltetmo" || getprop("ro.build.product") == "jfltetmo" || getprop("ro.product.device") == "jfltecri" || getprop("ro.build.product") == "jfltecri" || getprop("ro.product.device") == "jfltecsp" || getprop("ro.build.product") == "jfltecsp" || getprop("ro.product.device") == "jflteatt" || getprop("ro.build.product") == "jflteatt" || getprop("ro.product.device") == "jfltecan" || getprop("ro.build.product") == "jfltecan" || getprop("ro.product.device") == "jflteusc" || getprop("ro.build.product") == "jflteusc" || getprop("ro.product.device") == "jfltezm" || getprop("ro.build.product") == "jfltezm" || abort("This package is for device: jflte,jfltexx,i9505,GT-I9505,jgedlte,i9505g,GT-I9505G,jfltevzw,jfltespr,jflterefreshspr,jfltetmo,jfltecri,jfltecsp,jflteatt,jfltecan,jflteusc,jfltezm; this device is " + getprop("ro.product.device") + "."););
ifelse(is_mounted("/system"), unmount("/system"));

ui_print(" ");
ui_print("#############################################");
ui_print("#");
ui_print("# Flashing Synergy SaberMod CM12.1 Kernel ...");
ui_print("#");
ui_print("#############################################");

# Unpack /system files
mount("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "/system");
package_extract_dir("system", "/system");
set_perm(0, 0, 0755, "/system/bin/boot_trim");
set_perm(0, 0, 0755, "/system/bin/boot_sqlite3");
set_perm(0, 0, 0755, "/system/bin/google_leds");
unmount("/system");

# Unpack Loki patcher
package_extract_dir("kernel", "/tmp");
package_extract_file("boot.img", "/tmp/boot.img");
set_perm(0, 0, 0777, "/tmp/loki_bootloaders");
set_perm(0, 0, 0777, "/tmp/flash_kernel.sh");
set_perm(0, 0, 0777, "/tmp/loki_patch");
set_perm(0, 0, 0777, "/tmp/loki_flash");

run_program("/tmp/flash_kernel.sh");

ui_print(" ");
ui_print("Done, please reboot");
ui_print(" ");

set_progress(1.000000);
